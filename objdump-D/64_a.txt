
64_a.out:     file format elf32-i386


Disassembly of section .interp:

00000194 <.interp>:
 194:	2f                   	das    
 195:	6c                   	insb   (%dx),%es:(%edi)
 196:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 19d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 1a4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.gnu.build-id:

000001a8 <.note.gnu.build-id>:
 1a8:	04 00                	add    $0x0,%al
 1aa:	00 00                	add    %al,(%eax)
 1ac:	14 00                	adc    $0x0,%al
 1ae:	00 00                	add    %al,(%eax)
 1b0:	03 00                	add    (%eax),%eax
 1b2:	00 00                	add    %al,(%eax)
 1b4:	47                   	inc    %edi
 1b5:	4e                   	dec    %esi
 1b6:	55                   	push   %ebp
 1b7:	00 ac 85 76 76 30 67 	add    %ch,0x67307676(%ebp,%eax,4)
 1be:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 1bf:	98                   	cwtl   
 1c0:	60                   	pusha  
 1c1:	f4                   	hlt    
 1c2:	fa                   	cli    
 1c3:	73 6f                	jae    234 <_init-0xdcc>
 1c5:	ba 93 5d c6 7d       	mov    $0x7dc65d93,%edx
 1ca:	f2                   	repnz
 1cb:	73                   	.byte 0x73

Disassembly of section .note.ABI-tag:

000001cc <.note.ABI-tag>:
 1cc:	04 00                	add    $0x0,%al
 1ce:	00 00                	add    %al,(%eax)
 1d0:	10 00                	adc    %al,(%eax)
 1d2:	00 00                	add    %al,(%eax)
 1d4:	01 00                	add    %eax,(%eax)
 1d6:	00 00                	add    %al,(%eax)
 1d8:	47                   	inc    %edi
 1d9:	4e                   	dec    %esi
 1da:	55                   	push   %ebp
 1db:	00 00                	add    %al,(%eax)
 1dd:	00 00                	add    %al,(%eax)
 1df:	00 03                	add    %al,(%ebx)
 1e1:	00 00                	add    %al,(%eax)
 1e3:	00 02                	add    %al,(%edx)
 1e5:	00 00                	add    %al,(%eax)
 1e7:	00 00                	add    %al,(%eax)
 1e9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

000001ec <.gnu.hash>:
 1ec:	02 00                	add    (%eax),%al
 1ee:	00 00                	add    %al,(%eax)
 1f0:	09 00                	or     %eax,(%eax)
 1f2:	00 00                	add    %al,(%eax)
 1f4:	01 00                	add    %eax,(%eax)
 1f6:	00 00                	add    %al,(%eax)
 1f8:	05 00 00 00 00       	add    $0x0,%eax
 1fd:	20 00                	and    %al,(%eax)
 1ff:	20 00                	and    %al,(%eax)
 201:	00 00                	add    %al,(%eax)
 203:	00 09                	add    %cl,(%ecx)
 205:	00 00                	add    %al,(%eax)
 207:	00                   	.byte 0x0
 208:	ad                   	lods   %ds:(%esi),%eax
 209:	4b                   	dec    %ebx
 20a:	e3 c0                	jecxz  1cc <_init-0xe34>

Disassembly of section .dynsym:

0000020c <.dynsym>:
	...
 21c:	78 00                	js     21e <_init-0xde2>
	...
 226:	00 00                	add    %al,(%eax)
 228:	20 00                	and    %al,(%eax)
 22a:	00 00                	add    %al,(%eax)
 22c:	1f                   	pop    %ds
	...
 235:	00 00                	add    %al,(%eax)
 237:	00 12                	add    %dl,(%edx)
 239:	00 00                	add    %al,(%eax)
 23b:	00 47 00             	add    %al,0x0(%edi)
	...
 246:	00 00                	add    %al,(%eax)
 248:	12 00                	adc    (%eax),%al
 24a:	00 00                	add    %al,(%eax)
 24c:	26 00 00             	add    %al,%es:(%eax)
	...
 257:	00 22                	add    %ah,(%edx)
 259:	00 00                	add    %al,(%eax)
 25b:	00 1a                	add    %bl,(%edx)
	...
 265:	00 00                	add    %al,(%eax)
 267:	00 12                	add    %dl,(%edx)
 269:	00 00                	add    %al,(%eax)
 26b:	00 94 00 00 00 00 00 	add    %dl,0x0(%eax,%eax,1)
 272:	00 00                	add    %al,(%eax)
 274:	00 00                	add    %al,(%eax)
 276:	00 00                	add    %al,(%eax)
 278:	20 00                	and    %al,(%eax)
 27a:	00 00                	add    %al,(%eax)
 27c:	35 00 00 00 00       	xor    $0x0,%eax
 281:	00 00                	add    %al,(%eax)
 283:	00 00                	add    %al,(%eax)
 285:	00 00                	add    %al,(%eax)
 287:	00 12                	add    %dl,(%edx)
 289:	00 00                	add    %al,(%eax)
 28b:	00 a3 00 00 00 00    	add    %ah,0x0(%ebx)
 291:	00 00                	add    %al,(%eax)
 293:	00 00                	add    %al,(%eax)
 295:	00 00                	add    %al,(%eax)
 297:	00 20                	add    %ah,(%eax)
 299:	00 00                	add    %al,(%eax)
 29b:	00 0b                	add    %cl,(%ebx)
 29d:	00 00                	add    %al,(%eax)
 29f:	00 04 20             	add    %al,(%eax,%eiz,1)
 2a2:	00 00                	add    %al,(%eax)
 2a4:	04 00                	add    $0x0,%al
 2a6:	00 00                	add    %al,(%eax)
 2a8:	11 00                	adc    %eax,(%eax)
 2aa:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

000002ac <.dynstr>:
 2ac:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 2b0:	63 2e                	arpl   %bp,(%esi)
 2b2:	73 6f                	jae    323 <_init-0xcdd>
 2b4:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 2b9:	4f                   	dec    %edi
 2ba:	5f                   	pop    %edi
 2bb:	73 74                	jae    331 <_init-0xccf>
 2bd:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 2c4:	64 
 2c5:	00 70 75             	add    %dh,0x75(%eax)
 2c8:	74 73                	je     33d <_init-0xcc3>
 2ca:	00 70 72             	add    %dh,0x72(%eax)
 2cd:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 2d4:	63 78 61             	arpl   %di,0x61(%eax)
 2d7:	5f                   	pop    %edi
 2d8:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2de:	7a 65                	jp     345 <_init-0xcbb>
 2e0:	00 5f 5f             	add    %bl,0x5f(%edi)
 2e3:	6c                   	insb   (%dx),%es:(%edi)
 2e4:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 2eb:	72 74                	jb     361 <_init-0xc9f>
 2ed:	5f                   	pop    %edi
 2ee:	6d                   	insl   (%dx),%es:(%edi)
 2ef:	61                   	popa   
 2f0:	69 6e 00 5f 5f 73 74 	imul   $0x74735f5f,0x0(%esi),%ebp
 2f7:	61                   	popa   
 2f8:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 2fb:	63 68 6b             	arpl   %bp,0x6b(%eax)
 2fe:	5f                   	pop    %edi
 2ff:	66 61                	popaw  
 301:	69 6c 00 47 4c 49 42 	imul   $0x4342494c,0x47(%eax,%eax,1),%ebp
 308:	43 
 309:	5f                   	pop    %edi
 30a:	32 2e                	xor    (%esi),%ch
 30c:	31 2e                	xor    %ebp,(%esi)
 30e:	33 00                	xor    (%eax),%eax
 310:	47                   	inc    %edi
 311:	4c                   	dec    %esp
 312:	49                   	dec    %ecx
 313:	42                   	inc    %edx
 314:	43                   	inc    %ebx
 315:	5f                   	pop    %edi
 316:	32 2e                	xor    (%esi),%ch
 318:	34 00                	xor    $0x0,%al
 31a:	47                   	inc    %edi
 31b:	4c                   	dec    %esp
 31c:	49                   	dec    %ecx
 31d:	42                   	inc    %edx
 31e:	43                   	inc    %ebx
 31f:	5f                   	pop    %edi
 320:	32 2e                	xor    (%esi),%ch
 322:	30 00                	xor    %al,(%eax)
 324:	5f                   	pop    %edi
 325:	49                   	dec    %ecx
 326:	54                   	push   %esp
 327:	4d                   	dec    %ebp
 328:	5f                   	pop    %edi
 329:	64 65 72 65          	fs gs jb 392 <_init-0xc6e>
 32d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 334:	4d 
 335:	43                   	inc    %ebx
 336:	6c                   	insb   (%dx),%es:(%edi)
 337:	6f                   	outsl  %ds:(%esi),(%dx)
 338:	6e                   	outsb  %ds:(%esi),(%dx)
 339:	65 54                	gs push %esp
 33b:	61                   	popa   
 33c:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 340:	5f                   	pop    %edi
 341:	5f                   	pop    %edi
 342:	67 6d                	insl   (%dx),%es:(%di)
 344:	6f                   	outsl  %ds:(%esi),(%dx)
 345:	6e                   	outsb  %ds:(%esi),(%dx)
 346:	5f                   	pop    %edi
 347:	73 74                	jae    3bd <_init-0xc43>
 349:	61                   	popa   
 34a:	72 74                	jb     3c0 <_init-0xc40>
 34c:	5f                   	pop    %edi
 34d:	5f                   	pop    %edi
 34e:	00 5f 49             	add    %bl,0x49(%edi)
 351:	54                   	push   %esp
 352:	4d                   	dec    %ebp
 353:	5f                   	pop    %edi
 354:	72 65                	jb     3bb <_init-0xc45>
 356:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 35d:	4d 
 35e:	43                   	inc    %ebx
 35f:	6c                   	insb   (%dx),%es:(%edi)
 360:	6f                   	outsl  %ds:(%esi),(%dx)
 361:	6e                   	outsb  %ds:(%esi),(%dx)
 362:	65 54                	gs push %esp
 364:	61                   	popa   
 365:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)

Disassembly of section .gnu.version:

0000036a <.gnu.version>:
 36a:	00 00                	add    %al,(%eax)
 36c:	00 00                	add    %al,(%eax)
 36e:	02 00                	add    (%eax),%al
 370:	03 00                	add    (%eax),%eax
 372:	04 00                	add    $0x0,%al
 374:	02 00                	add    (%eax),%al
 376:	00 00                	add    %al,(%eax)
 378:	02 00                	add    (%eax),%al
 37a:	00 00                	add    %al,(%eax)
 37c:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

00000380 <.gnu.version_r>:
 380:	01 00                	add    %eax,(%eax)
 382:	03 00                	add    (%eax),%eax
 384:	01 00                	add    %eax,(%eax)
 386:	00 00                	add    %al,(%eax)
 388:	10 00                	adc    %al,(%eax)
 38a:	00 00                	add    %al,(%eax)
 38c:	00 00                	add    %al,(%eax)
 38e:	00 00                	add    %al,(%eax)
 390:	73 1f                	jae    3b1 <_init-0xc4f>
 392:	69 09 00 00 04 00    	imul   $0x40000,(%ecx),%ecx
 398:	58                   	pop    %eax
 399:	00 00                	add    %al,(%eax)
 39b:	00 10                	add    %dl,(%eax)
 39d:	00 00                	add    %al,(%eax)
 39f:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 3a2:	69 0d 00 00 03 00 64 	imul   $0x64,0x30000,%ecx
 3a9:	00 00 00 
 3ac:	10 00                	adc    %al,(%eax)
 3ae:	00 00                	add    %al,(%eax)
 3b0:	10 69 69             	adc    %ch,0x69(%ecx)
 3b3:	0d 00 00 02 00       	or     $0x20000,%eax
 3b8:	6e                   	outsb  %ds:(%esi),(%dx)
 3b9:	00 00                	add    %al,(%eax)
 3bb:	00 00                	add    %al,(%eax)
 3bd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

000003c0 <.rel.dyn>:
 3c0:	d0 3e                	sarb   (%esi)
 3c2:	00 00                	add    %al,(%eax)
 3c4:	08 00                	or     %al,(%eax)
 3c6:	00 00                	add    %al,(%eax)
 3c8:	d4 3e                	aam    $0x3e
 3ca:	00 00                	add    %al,(%eax)
 3cc:	08 00                	or     %al,(%eax)
 3ce:	00 00                	add    %al,(%eax)
 3d0:	f8                   	clc    
 3d1:	3f                   	aas    
 3d2:	00 00                	add    %al,(%eax)
 3d4:	08 00                	or     %al,(%eax)
 3d6:	00 00                	add    %al,(%eax)
 3d8:	04 40                	add    $0x40,%al
 3da:	00 00                	add    %al,(%eax)
 3dc:	08 00                	or     %al,(%eax)
 3de:	00 00                	add    %al,(%eax)
 3e0:	ec                   	in     (%dx),%al
 3e1:	3f                   	aas    
 3e2:	00 00                	add    %al,(%eax)
 3e4:	06                   	push   %es
 3e5:	01 00                	add    %eax,(%eax)
 3e7:	00 f0                	add    %dh,%al
 3e9:	3f                   	aas    
 3ea:	00 00                	add    %al,(%eax)
 3ec:	06                   	push   %es
 3ed:	04 00                	add    $0x0,%al
 3ef:	00 f4                	add    %dh,%ah
 3f1:	3f                   	aas    
 3f2:	00 00                	add    %al,(%eax)
 3f4:	06                   	push   %es
 3f5:	06                   	push   %es
 3f6:	00 00                	add    %al,(%eax)
 3f8:	fc                   	cld    
 3f9:	3f                   	aas    
 3fa:	00 00                	add    %al,(%eax)
 3fc:	06                   	push   %es
 3fd:	08 00                	or     %al,(%eax)
	...

Disassembly of section .rel.plt:

00000400 <.rel.plt>:
 400:	dc 3f                	fdivrl (%edi)
 402:	00 00                	add    %al,(%eax)
 404:	07                   	pop    %es
 405:	02 00                	add    (%eax),%al
 407:	00 e0                	add    %ah,%al
 409:	3f                   	aas    
 40a:	00 00                	add    %al,(%eax)
 40c:	07                   	pop    %es
 40d:	03 00                	add    (%eax),%eax
 40f:	00 e4                	add    %ah,%ah
 411:	3f                   	aas    
 412:	00 00                	add    %al,(%eax)
 414:	07                   	pop    %es
 415:	05 00 00 e8 3f       	add    $0x3fe80000,%eax
 41a:	00 00                	add    %al,(%eax)
 41c:	07                   	pop    %es
 41d:	07                   	pop    %es
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 b7 00 00 00       	call   10c0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 c7 2f 00 00    	add    $0x2fc7,%ebx
    100f:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <__stack_chk_fail@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <puts@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

00001060 <__libc_start_main@plt>:
    1060:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1066:	68 18 00 00 00       	push   $0x18
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001070 <__cxa_finalize@plt>:
    1070:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	5e                   	pop    %esi
    1083:	89 e1                	mov    %esp,%ecx
    1085:	83 e4 f0             	and    $0xfffffff0,%esp
    1088:	50                   	push   %eax
    1089:	54                   	push   %esp
    108a:	52                   	push   %edx
    108b:	e8 22 00 00 00       	call   10b2 <_start+0x32>
    1090:	81 c3 40 2f 00 00    	add    $0x2f40,%ebx
    1096:	8d 83 e0 d3 ff ff    	lea    -0x2c20(%ebx),%eax
    109c:	50                   	push   %eax
    109d:	8d 83 80 d3 ff ff    	lea    -0x2c80(%ebx),%eax
    10a3:	50                   	push   %eax
    10a4:	51                   	push   %ecx
    10a5:	56                   	push   %esi
    10a6:	ff b3 28 00 00 00    	pushl  0x28(%ebx)
    10ac:	e8 af ff ff ff       	call   1060 <__libc_start_main@plt>
    10b1:	f4                   	hlt    
    10b2:	8b 1c 24             	mov    (%esp),%ebx
    10b5:	c3                   	ret    
    10b6:	66 90                	xchg   %ax,%ax
    10b8:	66 90                	xchg   %ax,%ax
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <__x86.get_pc_thunk.bx>:
    10c0:	8b 1c 24             	mov    (%esp),%ebx
    10c3:	c3                   	ret    
    10c4:	66 90                	xchg   %ax,%ax
    10c6:	66 90                	xchg   %ax,%ax
    10c8:	66 90                	xchg   %ax,%ax
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <deregister_tm_clones>:
    10d0:	e8 e0 00 00 00       	call   11b5 <__x86.get_pc_thunk.dx>
    10d5:	81 c2 fb 2e 00 00    	add    $0x2efb,%edx
    10db:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    10e1:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    10e7:	39 c8                	cmp    %ecx,%eax
    10e9:	74 1d                	je     1108 <deregister_tm_clones+0x38>
    10eb:	8b 82 1c 00 00 00    	mov    0x1c(%edx),%eax
    10f1:	85 c0                	test   %eax,%eax
    10f3:	74 13                	je     1108 <deregister_tm_clones+0x38>
    10f5:	55                   	push   %ebp
    10f6:	89 e5                	mov    %esp,%ebp
    10f8:	83 ec 14             	sub    $0x14,%esp
    10fb:	51                   	push   %ecx
    10fc:	ff d0                	call   *%eax
    10fe:	83 c4 10             	add    $0x10,%esp
    1101:	c9                   	leave  
    1102:	c3                   	ret    
    1103:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1107:	90                   	nop
    1108:	c3                   	ret    
    1109:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001110 <register_tm_clones>:
    1110:	e8 a0 00 00 00       	call   11b5 <__x86.get_pc_thunk.dx>
    1115:	81 c2 bb 2e 00 00    	add    $0x2ebb,%edx
    111b:	55                   	push   %ebp
    111c:	89 e5                	mov    %esp,%ebp
    111e:	53                   	push   %ebx
    111f:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    1125:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    112b:	83 ec 04             	sub    $0x4,%esp
    112e:	29 c8                	sub    %ecx,%eax
    1130:	c1 f8 02             	sar    $0x2,%eax
    1133:	89 c3                	mov    %eax,%ebx
    1135:	c1 eb 1f             	shr    $0x1f,%ebx
    1138:	01 d8                	add    %ebx,%eax
    113a:	d1 f8                	sar    %eax
    113c:	74 14                	je     1152 <register_tm_clones+0x42>
    113e:	8b 92 2c 00 00 00    	mov    0x2c(%edx),%edx
    1144:	85 d2                	test   %edx,%edx
    1146:	74 0a                	je     1152 <register_tm_clones+0x42>
    1148:	83 ec 08             	sub    $0x8,%esp
    114b:	50                   	push   %eax
    114c:	51                   	push   %ecx
    114d:	ff d2                	call   *%edx
    114f:	83 c4 10             	add    $0x10,%esp
    1152:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1155:	c9                   	leave  
    1156:	c3                   	ret    
    1157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    115e:	66 90                	xchg   %ax,%ax

00001160 <__do_global_dtors_aux>:
    1160:	55                   	push   %ebp
    1161:	89 e5                	mov    %esp,%ebp
    1163:	53                   	push   %ebx
    1164:	e8 57 ff ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1169:	81 c3 67 2e 00 00    	add    $0x2e67,%ebx
    116f:	83 ec 04             	sub    $0x4,%esp
    1172:	80 bb 38 00 00 00 00 	cmpb   $0x0,0x38(%ebx)
    1179:	75 27                	jne    11a2 <__do_global_dtors_aux+0x42>
    117b:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
    1181:	85 c0                	test   %eax,%eax
    1183:	74 11                	je     1196 <__do_global_dtors_aux+0x36>
    1185:	83 ec 0c             	sub    $0xc,%esp
    1188:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
    118e:	e8 dd fe ff ff       	call   1070 <__cxa_finalize@plt>
    1193:	83 c4 10             	add    $0x10,%esp
    1196:	e8 35 ff ff ff       	call   10d0 <deregister_tm_clones>
    119b:	c6 83 38 00 00 00 01 	movb   $0x1,0x38(%ebx)
    11a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11a5:	c9                   	leave  
    11a6:	c3                   	ret    
    11a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11ae:	66 90                	xchg   %ax,%ax

000011b0 <frame_dummy>:
    11b0:	e9 5b ff ff ff       	jmp    1110 <register_tm_clones>

000011b5 <__x86.get_pc_thunk.dx>:
    11b5:	8b 14 24             	mov    (%esp),%edx
    11b8:	c3                   	ret    

000011b9 <swap>:
    11b9:	55                   	push   %ebp
    11ba:	89 e5                	mov    %esp,%ebp
    11bc:	e8 83 01 00 00       	call   1344 <__x86.get_pc_thunk.ax>
    11c1:	05 0f 2e 00 00       	add    $0x2e0f,%eax
    11c6:	8b 45 08             	mov    0x8(%ebp),%eax
    11c9:	8b 10                	mov    (%eax),%edx
    11cb:	8b 45 0c             	mov    0xc(%ebp),%eax
    11ce:	8b 00                	mov    (%eax),%eax
    11d0:	31 c2                	xor    %eax,%edx
    11d2:	8b 45 08             	mov    0x8(%ebp),%eax
    11d5:	89 10                	mov    %edx,(%eax)
    11d7:	8b 45 0c             	mov    0xc(%ebp),%eax
    11da:	8b 10                	mov    (%eax),%edx
    11dc:	8b 45 08             	mov    0x8(%ebp),%eax
    11df:	8b 00                	mov    (%eax),%eax
    11e1:	31 c2                	xor    %eax,%edx
    11e3:	8b 45 0c             	mov    0xc(%ebp),%eax
    11e6:	89 10                	mov    %edx,(%eax)
    11e8:	8b 45 08             	mov    0x8(%ebp),%eax
    11eb:	8b 10                	mov    (%eax),%edx
    11ed:	8b 45 0c             	mov    0xc(%ebp),%eax
    11f0:	8b 00                	mov    (%eax),%eax
    11f2:	31 c2                	xor    %eax,%edx
    11f4:	8b 45 08             	mov    0x8(%ebp),%eax
    11f7:	89 10                	mov    %edx,(%eax)
    11f9:	90                   	nop
    11fa:	5d                   	pop    %ebp
    11fb:	c3                   	ret    

000011fc <main>:
    11fc:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1200:	83 e4 f0             	and    $0xfffffff0,%esp
    1203:	ff 71 fc             	pushl  -0x4(%ecx)
    1206:	55                   	push   %ebp
    1207:	89 e5                	mov    %esp,%ebp
    1209:	53                   	push   %ebx
    120a:	51                   	push   %ecx
    120b:	83 ec 30             	sub    $0x30,%esp
    120e:	e8 ad fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1213:	81 c3 bd 2d 00 00    	add    $0x2dbd,%ebx
    1219:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    121f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1222:	31 c0                	xor    %eax,%eax
    1224:	8d 45 c8             	lea    -0x38(%ebp),%eax
    1227:	89 45 d0             	mov    %eax,-0x30(%ebp)
    122a:	8d 45 cc             	lea    -0x34(%ebp),%eax
    122d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1230:	c7 45 db 48 65 6c 6c 	movl   $0x6c6c6548,-0x25(%ebp)
    1237:	66 c7 45 df 6f 20    	movw   $0x206f,-0x21(%ebp)
    123d:	c7 45 e1 57 6f 72 6c 	movl   $0x6c726f57,-0x1f(%ebp)
    1244:	66 c7 45 e5 64 21    	movw   $0x2164,-0x1b(%ebp)
    124a:	c7 45 e7 00 00 00 00 	movl   $0x0,-0x19(%ebp)
    1251:	c7 45 eb 00 00 00 00 	movl   $0x0,-0x15(%ebp)
    1258:	c7 45 ef 00 00 00 00 	movl   $0x0,-0x11(%ebp)
    125f:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
    1263:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
    126a:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%ebp)
    1271:	8b 45 db             	mov    -0x25(%ebp),%eax
    1274:	89 45 e7             	mov    %eax,-0x19(%ebp)
    1277:	0f b7 45 df          	movzwl -0x21(%ebp),%eax
    127b:	66 89 45 eb          	mov    %ax,-0x15(%ebp)
    127f:	8d 45 e7             	lea    -0x19(%ebp),%eax
    1282:	83 c0 06             	add    $0x6,%eax
    1285:	8b 55 e1             	mov    -0x1f(%ebp),%edx
    1288:	89 10                	mov    %edx,(%eax)
    128a:	0f b7 55 e5          	movzwl -0x1b(%ebp),%edx
    128e:	66 89 50 04          	mov    %dx,0x4(%eax)
    1292:	83 ec 0c             	sub    $0xc,%esp
    1295:	8d 45 e7             	lea    -0x19(%ebp),%eax
    1298:	50                   	push   %eax
    1299:	e8 b2 fd ff ff       	call   1050 <puts@plt>
    129e:	83 c4 10             	add    $0x10,%esp
    12a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
    12a4:	8b 00                	mov    (%eax),%eax
    12a6:	83 ec 08             	sub    $0x8,%esp
    12a9:	50                   	push   %eax
    12aa:	8d 83 38 e0 ff ff    	lea    -0x1fc8(%ebx),%eax
    12b0:	50                   	push   %eax
    12b1:	e8 7a fd ff ff       	call   1030 <printf@plt>
    12b6:	83 c4 10             	add    $0x10,%esp
    12b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    12bc:	8b 00                	mov    (%eax),%eax
    12be:	83 ec 08             	sub    $0x8,%esp
    12c1:	50                   	push   %eax
    12c2:	8d 83 43 e0 ff ff    	lea    -0x1fbd(%ebx),%eax
    12c8:	50                   	push   %eax
    12c9:	e8 62 fd ff ff       	call   1030 <printf@plt>
    12ce:	83 c4 10             	add    $0x10,%esp
    12d1:	83 ec 0c             	sub    $0xc,%esp
    12d4:	8d 83 4e e0 ff ff    	lea    -0x1fb2(%ebx),%eax
    12da:	50                   	push   %eax
    12db:	e8 70 fd ff ff       	call   1050 <puts@plt>
    12e0:	83 c4 10             	add    $0x10,%esp
    12e3:	83 ec 08             	sub    $0x8,%esp
    12e6:	ff 75 d4             	pushl  -0x2c(%ebp)
    12e9:	ff 75 d0             	pushl  -0x30(%ebp)
    12ec:	e8 c8 fe ff ff       	call   11b9 <swap>
    12f1:	83 c4 10             	add    $0x10,%esp
    12f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
    12f7:	8b 00                	mov    (%eax),%eax
    12f9:	83 ec 08             	sub    $0x8,%esp
    12fc:	50                   	push   %eax
    12fd:	8d 83 38 e0 ff ff    	lea    -0x1fc8(%ebx),%eax
    1303:	50                   	push   %eax
    1304:	e8 27 fd ff ff       	call   1030 <printf@plt>
    1309:	83 c4 10             	add    $0x10,%esp
    130c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    130f:	8b 00                	mov    (%eax),%eax
    1311:	83 ec 08             	sub    $0x8,%esp
    1314:	50                   	push   %eax
    1315:	8d 83 43 e0 ff ff    	lea    -0x1fbd(%ebx),%eax
    131b:	50                   	push   %eax
    131c:	e8 0f fd ff ff       	call   1030 <printf@plt>
    1321:	83 c4 10             	add    $0x10,%esp
    1324:	b8 00 00 00 00       	mov    $0x0,%eax
    1329:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    132c:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
    1333:	74 05                	je     133a <main+0x13e>
    1335:	e8 86 00 00 00       	call   13c0 <__stack_chk_fail_local>
    133a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    133d:	59                   	pop    %ecx
    133e:	5b                   	pop    %ebx
    133f:	5d                   	pop    %ebp
    1340:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1343:	c3                   	ret    

00001344 <__x86.get_pc_thunk.ax>:
    1344:	8b 04 24             	mov    (%esp),%eax
    1347:	c3                   	ret    
    1348:	66 90                	xchg   %ax,%ax
    134a:	66 90                	xchg   %ax,%ax
    134c:	66 90                	xchg   %ax,%ax
    134e:	66 90                	xchg   %ax,%ax

00001350 <__libc_csu_init>:
    1350:	55                   	push   %ebp
    1351:	57                   	push   %edi
    1352:	56                   	push   %esi
    1353:	53                   	push   %ebx
    1354:	e8 67 fd ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1359:	81 c3 77 2c 00 00    	add    $0x2c77,%ebx
    135f:	83 ec 0c             	sub    $0xc,%esp
    1362:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    1366:	e8 95 fc ff ff       	call   1000 <_init>
    136b:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
    1371:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
    1377:	29 c6                	sub    %eax,%esi
    1379:	c1 fe 02             	sar    $0x2,%esi
    137c:	74 1f                	je     139d <__libc_csu_init+0x4d>
    137e:	31 ff                	xor    %edi,%edi
    1380:	83 ec 04             	sub    $0x4,%esp
    1383:	55                   	push   %ebp
    1384:	ff 74 24 2c          	pushl  0x2c(%esp)
    1388:	ff 74 24 2c          	pushl  0x2c(%esp)
    138c:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
    1393:	83 c7 01             	add    $0x1,%edi
    1396:	83 c4 10             	add    $0x10,%esp
    1399:	39 fe                	cmp    %edi,%esi
    139b:	75 e3                	jne    1380 <__libc_csu_init+0x30>
    139d:	83 c4 0c             	add    $0xc,%esp
    13a0:	5b                   	pop    %ebx
    13a1:	5e                   	pop    %esi
    13a2:	5f                   	pop    %edi
    13a3:	5d                   	pop    %ebp
    13a4:	c3                   	ret    
    13a5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    13ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000013b0 <__libc_csu_fini>:
    13b0:	c3                   	ret    
    13b1:	66 90                	xchg   %ax,%ax
    13b3:	66 90                	xchg   %ax,%ax
    13b5:	66 90                	xchg   %ax,%ax
    13b7:	66 90                	xchg   %ax,%ax
    13b9:	66 90                	xchg   %ax,%ax
    13bb:	66 90                	xchg   %ax,%ax
    13bd:	66 90                	xchg   %ax,%ax
    13bf:	90                   	nop

000013c0 <__stack_chk_fail_local>:
    13c0:	53                   	push   %ebx
    13c1:	e8 fa fc ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    13c6:	81 c3 0a 2c 00 00    	add    $0x2c0a,%ebx
    13cc:	83 ec 08             	sub    $0x8,%esp
    13cf:	e8 6c fc ff ff       	call   1040 <__stack_chk_fail@plt>

Disassembly of section .fini:

000013d4 <_fini>:
    13d4:	53                   	push   %ebx
    13d5:	83 ec 08             	sub    $0x8,%esp
    13d8:	e8 e3 fc ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    13dd:	81 c3 f3 2b 00 00    	add    $0x2bf3,%ebx
    13e3:	83 c4 08             	add    $0x8,%esp
    13e6:	5b                   	pop    %ebx
    13e7:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    (%eax),%eax
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    %eax,(%eax)
    2006:	02 00                	add    (%eax),%al
    2008:	41                   	inc    %ecx
    2009:	20 69 73             	and    %ch,0x73(%ecx)
    200c:	20 3a                	and    %bh,(%edx)
    200e:	20 25 64 0a 00 42    	and    %ah,0x42000a64
    2014:	20 69 73             	and    %ch,0x73(%ecx)
    2017:	20 3a                	and    %bh,(%edx)
    2019:	20 25 64 0a 00 44    	and    %ah,0x44000a64
    201f:	6f                   	outsl  %ds:(%esi),(%dx)
    2020:	20 53 77             	and    %dl,0x77(%ebx)
    2023:	61                   	popa   
    2024:	70 2e                	jo     2054 <__GNU_EH_FRAME_HDR+0x2c>
	...

Disassembly of section .eh_frame_hdr:

00002028 <__GNU_EH_FRAME_HDR>:
    2028:	01 1b                	add    %ebx,(%ebx)
    202a:	03 3b                	add    (%ebx),%edi
    202c:	50                   	push   %eax
    202d:	00 00                	add    %al,(%eax)
    202f:	00 09                	add    %cl,(%ecx)
    2031:	00 00                	add    %al,(%eax)
    2033:	00 f8                	add    %bh,%al
    2035:	ef                   	out    %eax,(%dx)
    2036:	ff                   	(bad)  
    2037:	ff 98 00 00 00 48    	lcall  *0x48000000(%eax)
    203d:	f0 ff                	lock (bad) 
    203f:	ff                   	(bad)  
    2040:	bc 00 00 00 58       	mov    $0x58000000,%esp
    2045:	f0 ff                	lock (bad) 
    2047:	ff 6c 00 00          	ljmp   *0x0(%eax,%eax,1)
    204b:	00 91 f1 ff ff d0    	add    %dl,-0x2f00000f(%ecx)
    2051:	00 00                	add    %al,(%eax)
    2053:	00 d4                	add    %dl,%ah
    2055:	f1                   	icebp  
    2056:	ff                   	(bad)  
    2057:	ff f0                	push   %eax
    2059:	00 00                	add    %al,(%eax)
    205b:	00 1c f3             	add    %bl,(%ebx,%esi,8)
    205e:	ff                   	(bad)  
    205f:	ff 28                	ljmp   *(%eax)
    2061:	01 00                	add    %eax,(%eax)
    2063:	00 28                	add    %ch,(%eax)
    2065:	f3 ff                	repz (bad) 
    2067:	ff                   	(bad)  
    2068:	3c 01                	cmp    $0x1,%al
    206a:	00 00                	add    %al,(%eax)
    206c:	88 f3                	mov    %dh,%bl
    206e:	ff                   	(bad)  
    206f:	ff 88 01 00 00 98    	decl   -0x67ffffff(%eax)
    2075:	f3 ff                	repz (bad) 
    2077:	ff                   	.byte 0xff
    2078:	9c                   	pushf  
    2079:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

0000207c <__FRAME_END__-0x164>:
    207c:	14 00                	adc    $0x0,%al
    207e:	00 00                	add    %al,(%eax)
    2080:	00 00                	add    %al,(%eax)
    2082:	00 00                	add    %al,(%eax)
    2084:	01 7a 52             	add    %edi,0x52(%edx)
    2087:	00 01                	add    %al,(%ecx)
    2089:	7c 08                	jl     2093 <__GNU_EH_FRAME_HDR+0x6b>
    208b:	01 1b                	add    %ebx,(%ebx)
    208d:	0c 04                	or     $0x4,%al
    208f:	04 88                	add    $0x88,%al
    2091:	01 07                	add    %eax,(%edi)
    2093:	08 10                	or     %dl,(%eax)
    2095:	00 00                	add    %al,(%eax)
    2097:	00 1c 00             	add    %bl,(%eax,%eax,1)
    209a:	00 00                	add    %al,(%eax)
    209c:	e4 ef                	in     $0xef,%al
    209e:	ff                   	(bad)  
    209f:	ff 36                	pushl  (%esi)
    20a1:	00 00                	add    %al,(%eax)
    20a3:	00 00                	add    %al,(%eax)
    20a5:	00 00                	add    %al,(%eax)
    20a7:	00 14 00             	add    %dl,(%eax,%eax,1)
    20aa:	00 00                	add    %al,(%eax)
    20ac:	00 00                	add    %al,(%eax)
    20ae:	00 00                	add    %al,(%eax)
    20b0:	01 7a 52             	add    %edi,0x52(%edx)
    20b3:	00 01                	add    %al,(%ecx)
    20b5:	7c 08                	jl     20bf <__GNU_EH_FRAME_HDR+0x97>
    20b7:	01 1b                	add    %ebx,(%ebx)
    20b9:	0c 04                	or     $0x4,%al
    20bb:	04 88                	add    $0x88,%al
    20bd:	01 00                	add    %eax,(%eax)
    20bf:	00 20                	add    %ah,(%eax)
    20c1:	00 00                	add    %al,(%eax)
    20c3:	00 1c 00             	add    %bl,(%eax,%eax,1)
    20c6:	00 00                	add    %al,(%eax)
    20c8:	58                   	pop    %eax
    20c9:	ef                   	out    %eax,(%dx)
    20ca:	ff                   	(bad)  
    20cb:	ff 50 00             	call   *0x0(%eax)
    20ce:	00 00                	add    %al,(%eax)
    20d0:	00 0e                	add    %cl,(%esi)
    20d2:	08 46 0e             	or     %al,0xe(%esi)
    20d5:	0c 4a                	or     $0x4a,%al
    20d7:	0f 0b                	ud2    
    20d9:	74 04                	je     20df <__GNU_EH_FRAME_HDR+0xb7>
    20db:	78 00                	js     20dd <__GNU_EH_FRAME_HDR+0xb5>
    20dd:	3f                   	aas    
    20de:	1a 3b                	sbb    (%ebx),%bh
    20e0:	2a 32                	sub    (%edx),%dh
    20e2:	24 22                	and    $0x22,%al
    20e4:	10 00                	adc    %al,(%eax)
    20e6:	00 00                	add    %al,(%eax)
    20e8:	40                   	inc    %eax
    20e9:	00 00                	add    %al,(%eax)
    20eb:	00 84 ef ff ff 08 00 	add    %al,0x8ffff(%edi,%ebp,8)
    20f2:	00 00                	add    %al,(%eax)
    20f4:	00 00                	add    %al,(%eax)
    20f6:	00 00                	add    %al,(%eax)
    20f8:	1c 00                	sbb    $0x0,%al
    20fa:	00 00                	add    %al,(%eax)
    20fc:	54                   	push   %esp
    20fd:	00 00                	add    %al,(%eax)
    20ff:	00 b9 f0 ff ff 43    	add    %bh,0x43fffff0(%ecx)
    2105:	00 00                	add    %al,(%eax)
    2107:	00 00                	add    %al,(%eax)
    2109:	41                   	inc    %ecx
    210a:	0e                   	push   %cs
    210b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
    2111:	7f c5                	jg     20d8 <__GNU_EH_FRAME_HDR+0xb0>
    2113:	0c 04                	or     $0x4,%al
    2115:	04 00                	add    $0x0,%al
    2117:	00 34 00             	add    %dh,(%eax,%eax,1)
    211a:	00 00                	add    %al,(%eax)
    211c:	74 00                	je     211e <__GNU_EH_FRAME_HDR+0xf6>
    211e:	00 00                	add    %al,(%eax)
    2120:	dc f0                	fdiv   %st,%st(0)
    2122:	ff                   	(bad)  
    2123:	ff 48 01             	decl   0x1(%eax)
    2126:	00 00                	add    %al,(%eax)
    2128:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
    212c:	00 47 10             	add    %al,0x10(%edi)
    212f:	05 02 75 00 44       	add    $0x44007502,%eax
    2134:	0f 03 75 78          	lsl    0x78(%ebp),%esi
    2138:	06                   	push   %es
    2139:	10 03                	adc    %al,(%ebx)
    213b:	02 75 7c             	add    0x7c(%ebp),%dh
    213e:	03 33                	add    (%ebx),%esi
    2140:	01 c1                	add    %eax,%ecx
    2142:	0c 01                	or     $0x1,%al
    2144:	00 41 c3             	add    %al,-0x3d(%ecx)
    2147:	41                   	inc    %ecx
    2148:	c5 43 0c             	lds    0xc(%ebx),%eax
    214b:	04 04                	add    $0x4,%al
    214d:	00 00                	add    %al,(%eax)
    214f:	00 10                	add    %dl,(%eax)
    2151:	00 00                	add    %al,(%eax)
    2153:	00 ac 00 00 00 ec f1 	add    %ch,-0xe140000(%eax,%eax,1)
    215a:	ff                   	(bad)  
    215b:	ff 04 00             	incl   (%eax,%eax,1)
    215e:	00 00                	add    %al,(%eax)
    2160:	00 00                	add    %al,(%eax)
    2162:	00 00                	add    %al,(%eax)
    2164:	48                   	dec    %eax
    2165:	00 00                	add    %al,(%eax)
    2167:	00 c0                	add    %al,%al
    2169:	00 00                	add    %al,(%eax)
    216b:	00 e4                	add    %ah,%ah
    216d:	f1                   	icebp  
    216e:	ff                   	(bad)  
    216f:	ff 55 00             	call   *0x0(%ebp)
    2172:	00 00                	add    %al,(%eax)
    2174:	00 41 0e             	add    %al,0xe(%ecx)
    2177:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
    217d:	87 03                	xchg   %eax,(%ebx)
    217f:	41                   	inc    %ecx
    2180:	0e                   	push   %cs
    2181:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
    2187:	83 05 4e 0e 20 61 0e 	addl   $0xe,0x61200e4e
    218e:	24 41                	and    $0x41,%al
    2190:	0e                   	push   %cs
    2191:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
    2195:	44                   	inc    %esp
    2196:	0e                   	push   %cs
    2197:	30 4d 0e             	xor    %cl,0xe(%ebp)
    219a:	20 47 0e             	and    %al,0xe(%edi)
    219d:	14 41                	adc    $0x41,%al
    219f:	c3                   	ret    
    21a0:	0e                   	push   %cs
    21a1:	10 41 c6             	adc    %al,-0x3a(%ecx)
    21a4:	0e                   	push   %cs
    21a5:	0c 41                	or     $0x41,%al
    21a7:	c7                   	(bad)  
    21a8:	0e                   	push   %cs
    21a9:	08 41 c5             	or     %al,-0x3b(%ecx)
    21ac:	0e                   	push   %cs
    21ad:	04 00                	add    $0x0,%al
    21af:	00 10                	add    %dl,(%eax)
    21b1:	00 00                	add    %al,(%eax)
    21b3:	00 0c 01             	add    %cl,(%ecx,%eax,1)
    21b6:	00 00                	add    %al,(%eax)
    21b8:	f8                   	clc    
    21b9:	f1                   	icebp  
    21ba:	ff                   	(bad)  
    21bb:	ff 01                	incl   (%ecx)
    21bd:	00 00                	add    %al,(%eax)
    21bf:	00 00                	add    %al,(%eax)
    21c1:	00 00                	add    %al,(%eax)
    21c3:	00 18                	add    %bl,(%eax)
    21c5:	00 00                	add    %al,(%eax)
    21c7:	00 20                	add    %ah,(%eax)
    21c9:	01 00                	add    %eax,(%eax)
    21cb:	00 f4                	add    %dh,%ah
    21cd:	f1                   	icebp  
    21ce:	ff                   	(bad)  
    21cf:	ff 14 00             	call   *(%eax,%eax,1)
    21d2:	00 00                	add    %al,(%eax)
    21d4:	00 41 0e             	add    %al,0xe(%ecx)
    21d7:	08 83 02 4e 0e 10    	or     %al,0x100e4e02(%ebx)
    21dd:	00 00                	add    %al,(%eax)
	...

000021e0 <__FRAME_END__>:
    21e0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00003ed0 <__frame_dummy_init_array_entry>:
    3ed0:	b0 11                	mov    $0x11,%al
	...

Disassembly of section .fini_array:

00003ed4 <__do_global_dtors_aux_fini_array_entry>:
    3ed4:	60                   	pusha  
    3ed5:	11 00                	adc    %eax,(%eax)
	...

Disassembly of section .dynamic:

00003ed8 <_DYNAMIC>:
    3ed8:	01 00                	add    %eax,(%eax)
    3eda:	00 00                	add    %al,(%eax)
    3edc:	01 00                	add    %eax,(%eax)
    3ede:	00 00                	add    %al,(%eax)
    3ee0:	0c 00                	or     $0x0,%al
    3ee2:	00 00                	add    %al,(%eax)
    3ee4:	00 10                	add    %dl,(%eax)
    3ee6:	00 00                	add    %al,(%eax)
    3ee8:	0d 00 00 00 d4       	or     $0xd4000000,%eax
    3eed:	13 00                	adc    (%eax),%eax
    3eef:	00 19                	add    %bl,(%ecx)
    3ef1:	00 00                	add    %al,(%eax)
    3ef3:	00 d0                	add    %dl,%al
    3ef5:	3e 00 00             	add    %al,%ds:(%eax)
    3ef8:	1b 00                	sbb    (%eax),%eax
    3efa:	00 00                	add    %al,(%eax)
    3efc:	04 00                	add    $0x0,%al
    3efe:	00 00                	add    %al,(%eax)
    3f00:	1a 00                	sbb    (%eax),%al
    3f02:	00 00                	add    %al,(%eax)
    3f04:	d4 3e                	aam    $0x3e
    3f06:	00 00                	add    %al,(%eax)
    3f08:	1c 00                	sbb    $0x0,%al
    3f0a:	00 00                	add    %al,(%eax)
    3f0c:	04 00                	add    $0x0,%al
    3f0e:	00 00                	add    %al,(%eax)
    3f10:	f5                   	cmc    
    3f11:	fe                   	(bad)  
    3f12:	ff 6f ec             	ljmp   *-0x14(%edi)
    3f15:	01 00                	add    %eax,(%eax)
    3f17:	00 05 00 00 00 ac    	add    %al,0xac000000
    3f1d:	02 00                	add    (%eax),%al
    3f1f:	00 06                	add    %al,(%esi)
    3f21:	00 00                	add    %al,(%eax)
    3f23:	00 0c 02             	add    %cl,(%edx,%eax,1)
    3f26:	00 00                	add    %al,(%eax)
    3f28:	0a 00                	or     (%eax),%al
    3f2a:	00 00                	add    %al,(%eax)
    3f2c:	bd 00 00 00 0b       	mov    $0xb000000,%ebp
    3f31:	00 00                	add    %al,(%eax)
    3f33:	00 10                	add    %dl,(%eax)
    3f35:	00 00                	add    %al,(%eax)
    3f37:	00 15 00 00 00 00    	add    %dl,0x0
    3f3d:	00 00                	add    %al,(%eax)
    3f3f:	00 03                	add    %al,(%ebx)
    3f41:	00 00                	add    %al,(%eax)
    3f43:	00 d0                	add    %dl,%al
    3f45:	3f                   	aas    
    3f46:	00 00                	add    %al,(%eax)
    3f48:	02 00                	add    (%eax),%al
    3f4a:	00 00                	add    %al,(%eax)
    3f4c:	20 00                	and    %al,(%eax)
    3f4e:	00 00                	add    %al,(%eax)
    3f50:	14 00                	adc    $0x0,%al
    3f52:	00 00                	add    %al,(%eax)
    3f54:	11 00                	adc    %eax,(%eax)
    3f56:	00 00                	add    %al,(%eax)
    3f58:	17                   	pop    %ss
    3f59:	00 00                	add    %al,(%eax)
    3f5b:	00 00                	add    %al,(%eax)
    3f5d:	04 00                	add    $0x0,%al
    3f5f:	00 11                	add    %dl,(%ecx)
    3f61:	00 00                	add    %al,(%eax)
    3f63:	00 c0                	add    %al,%al
    3f65:	03 00                	add    (%eax),%eax
    3f67:	00 12                	add    %dl,(%edx)
    3f69:	00 00                	add    %al,(%eax)
    3f6b:	00 40 00             	add    %al,0x0(%eax)
    3f6e:	00 00                	add    %al,(%eax)
    3f70:	13 00                	adc    (%eax),%eax
    3f72:	00 00                	add    %al,(%eax)
    3f74:	08 00                	or     %al,(%eax)
    3f76:	00 00                	add    %al,(%eax)
    3f78:	1e                   	push   %ds
    3f79:	00 00                	add    %al,(%eax)
    3f7b:	00 08                	add    %cl,(%eax)
    3f7d:	00 00                	add    %al,(%eax)
    3f7f:	00 fb                	add    %bh,%bl
    3f81:	ff                   	(bad)  
    3f82:	ff 6f 01             	ljmp   *0x1(%edi)
    3f85:	00 00                	add    %al,(%eax)
    3f87:	08 fe                	or     %bh,%dh
    3f89:	ff                   	(bad)  
    3f8a:	ff 6f 80             	ljmp   *-0x80(%edi)
    3f8d:	03 00                	add    (%eax),%eax
    3f8f:	00 ff                	add    %bh,%bh
    3f91:	ff                   	(bad)  
    3f92:	ff 6f 01             	ljmp   *0x1(%edi)
    3f95:	00 00                	add    %al,(%eax)
    3f97:	00 f0                	add    %dh,%al
    3f99:	ff                   	(bad)  
    3f9a:	ff 6f 6a             	ljmp   *0x6a(%edi)
    3f9d:	03 00                	add    (%eax),%eax
    3f9f:	00 fa                	add    %bh,%dl
    3fa1:	ff                   	(bad)  
    3fa2:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Disassembly of section .got:

00003fd0 <_GLOBAL_OFFSET_TABLE_>:
    3fd0:	d8 3e                	fdivrs (%esi)
	...
    3fda:	00 00                	add    %al,(%eax)
    3fdc:	36 10 00             	adc    %al,%ss:(%eax)
    3fdf:	00 46 10             	add    %al,0x10(%esi)
    3fe2:	00 00                	add    %al,(%eax)
    3fe4:	56                   	push   %esi
    3fe5:	10 00                	adc    %al,(%eax)
    3fe7:	00 66 10             	add    %ah,0x10(%esi)
	...
    3ff6:	00 00                	add    %al,(%eax)
    3ff8:	fc                   	cld    
    3ff9:	11 00                	adc    %eax,(%eax)
    3ffb:	00 00                	add    %al,(%eax)
    3ffd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .data:

00004000 <__data_start>:
    4000:	00 00                	add    %al,(%eax)
	...

00004004 <__dso_handle>:
    4004:	04 40                	add    $0x40,%al
	...

Disassembly of section .bss:

00004008 <__bss_start>:
    4008:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 38                	and    %bh,(%eax)
   e:	2e 33 2e             	xor    %cs:(%esi),%ebp
  11:	30 2d 36 75 62 75    	xor    %ch,0x75627536
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 29                	xor    %ebp,(%ecx)
  1c:	20 38                	and    %bh,(%eax)
  1e:	2e 33 2e             	xor    %cs:(%esi),%ebp
  21:	30 00                	xor    %al,(%eax)
